//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using MySql.Data.MySqlClient;

namespace PenjualanPembelian_LIB
{
    public class Pelanggan
    {
        public virtual int KodePelanggan
        {
            get;
            set;
        }

        public virtual string Nama
        {
            get;
            set;
        }

        public virtual string Alamat
        {
            get;
            set;
        }

        public virtual string Telepon
        {
            get;
            set;
        }
        public Pelanggan()
        {
            KodePelanggan = 0;
            Nama = "";
            Alamat = "";
            Telepon = "";
        }

        public Pelanggan(int kode, string nam, string almt, string telp)
        {
            KodePelanggan = kode;
            Nama = nam;
            Alamat = almt;
            Telepon = telp;
        }

        private static void JalankanPerintahDML(string pSql)
        {
            Koneksi k = new Koneksi();
            k.Connect();

            //buat mysqlcommand
            MySqlCommand c = new MySqlCommand(pSql, k.KoneksiDB);

            //gunakan executenonquery untuk menjalankan perintah insert/update/delete
            c.ExecuteNonQuery();
        }
        public static string TambahData(Pelanggan pel)
        {
            string sql = "INSERT INTO pelanggan(KodePelanggan, Nama, Alamat, Telepon) VALUES (" + pel.KodePelanggan + ",'" + pel.Nama.Replace("'", "\\'") + "','" +pel.Alamat.Replace("'", "\\'")+ "','"+ pel.Telepon.Replace("'", "\\'") + "')";

            try
            {
                JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException ex)
            {
                return ex.Message + ". Perintah SQL : " + sql;
            }
        }
        public static string UbahData(Pelanggan pel)
        {
            string sql = "UPDATE pelanggan SET Nama = '" + pel.Nama.Replace("'", "\\'") + "', Alamat = '" + pel.Alamat.Replace("'", "\\'") + "', Telepon = '" + pel.Telepon.Replace("'", "\\'") + "' WHERE KodePelanggan = " + pel.KodePelanggan;

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException ex)
            {
                return ex.Message + ". Perintah sql : " + sql;
            }
        }
        public static string HapusData(Pelanggan pel)
        {
            string sql = "DELETE FROM pelanggan WHERE KodePelanggan = " + pel.KodePelanggan;

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException ex)
            {
                return ex.Message + ". Perintah sql : " + sql;
            }
        }
        private static MySqlDataReader JalankanPerintahQuery(string pSql)
        {
            Koneksi k = new Koneksi();
            k.Connect();

            MySqlCommand c = new MySqlCommand(pSql, k.KoneksiDB);

            MySqlDataReader hasil = c.ExecuteReader();

            return hasil;
        }
        public static string BacaData(string kriteria, string nilaiKriteria, List<Pelanggan> listHasilData)
        {
            string sql = "";

            //jika tidak ada kriteria yang diisikan 
            if (kriteria == "")
            {
                sql = "SELECT * FROM pelanggan";
            }
            else
            {
                sql = "SELECT * FROM pelanggan WHERE " + kriteria + " LIKE '%" + nilaiKriteria + "%'";
            }
            try
            {
                MySqlDataReader hasilData = JalankanPerintahQuery(sql);
                while (hasilData.Read() == true)
                {
                    Pelanggan pl = new Pelanggan();
                    pl.KodePelanggan = hasilData.GetInt16(0);
                    pl.Nama = hasilData.GetValue(1).ToString();
                    pl.Alamat = hasilData.GetValue(2).ToString();
                    pl.Telepon = hasilData.GetValue(3).ToString();

                    listHasilData.Add(pl);
                }
                return "1";
            }
            catch (MySqlException ex)
            {
                return ex.Message + ". Perintah sql : " + sql;
            }
        }
        public static string CetakNota(string pKriteria, string pNilaiKriteria, string pNamaFile)
        {
            try
            {
                List<Pelanggan> listPelanggan = new List<Pelanggan>();

                //baca data nota tertentu yang akan dicetak
                string hasilBaca = Pelanggan.BacaData(pKriteria, pNilaiKriteria, listPelanggan);

                //simpan dulu isi nota yang akan ditampilkan ke objek file (streamwriter)
                StreamWriter file = new StreamWriter(pNamaFile);
                for (int i = 0; i < listPelanggan.Count; i++)
                {
                    file.WriteLine("{0,5} | {1,5} | {2,5} | {3,5}", listPelanggan[i].KodePelanggan, listPelanggan[i].Nama, listPelanggan[i].Alamat, listPelanggan[i].Telepon);
                }
                file.Close();
                //cetak ke printer
                Cetak c = new Cetak(pNamaFile, "Courier New", 9, 10, 10, 10, 10);
                c.CetakKePrinter("tulisan");
                return "1";
            }
            catch (Exception ex)
            {
                return ex.Message;
            }
        }
        public static string GenerateKode(out int pHasilKode)
        {
            //format kode : x(x : nomor urut pegawai)
            //untuk membuat no urut maka dapatkan kode pegawai terakhir (terbesar) dari pegawai tertentu
            string sql = "SELECT MAX(KodePelanggan) FROM pelanggan";
            pHasilKode = 0;
            try
            {
                MySqlDataReader hasilData = Koneksi.JalankanPerintahQuery(sql);

                if (hasilData.Read() == true)
                {// jika berhasil membaca data (ditemukan data ditabel pegawai)
                    if (hasilData.GetValue(0).ToString() != "")
                    {//jika hasil query tidak kosong (sudah ada data pegawai)
                        int kodeTerbaru = int.Parse(hasilData.GetValue(0).ToString()) + 1;
                        pHasilKode = kodeTerbaru;
                    }
                    else
                    {
                        // jika tidak ditemukan data di tabel pegawai maka kode terbaru = 1
                        pHasilKode = 1;
                    }
                }
                return "1";
            }
            catch (Exception e)
            {
                return e.Message;
            }
        }
    }
}

